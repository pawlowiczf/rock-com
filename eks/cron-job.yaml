apiVersion: batch/v1
kind: CronJob
metadata:
  name: ecr-token-refresh
  namespace: default
spec:
  schedule: "0 */6 * * *"  # co 6 godzin
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: ecr-token-refresher
          containers:
            - name: refresh-token
              image: amazon/aws-cli:latest
              command:
                - /bin/sh
                - -c
                - |
                  echo "==> Refreshing AWS ECR token secret"
                  export AWS_ACCESS_KEY_ID=$(AWS_ACCESS_KEY_ID)
                  export AWS_SECRET_ACCESS_KEY=$(AWS_SECRET_ACCESS_KEY)
                  TOKEN=$(aws ecr get-login-password --region eu-central-1)
                  kubectl create secret docker-registry aws-ecr-secret \
                    --docker-server=329976954374.dkr.ecr.eu-central-1.amazonaws.com \
                    --docker-username=AWS \
                    --docker-password="$TOKEN" \

              envFrom:
                - secretRef:
                    name: aws-credentials
          restartPolicy: OnFailure
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ecr-token-refresher
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: secret-updater
  namespace: default
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "create", "update", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: secret-updater-binding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: secret-updater
subjects:
  - kind: ServiceAccount
    name: ecr-token-refresher
    namespace: default